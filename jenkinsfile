pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo "Building the code using Maven"
                // Building stage use Maven
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Running unit tests and integration tests using Selenium"
                // Running with selenium
            }
        }
        post {
        success {
            echo "Test succeeded"
            mail to: "akhilaraji2013@gmail.com"
            subject: "Pipeline Success - ${env.JOB_NAME} build ${env.BUILD_NUMBER}",
            body: "The pipeline executed successfully.Also Attached the logs. ${BUILD_LOG, maxLines=9999, escapeHtml=false}"
            
        }
        failure {
            echo "Pipeline failed"
            mail to: "akhilaraji2013@gmail.com"
            subject: "Pipeline Success - ${env.JOB_NAME} build ${env.BUILD_NUMBER}",
            body: "The pipeline executed successfully.Also Attached the logs. ${BUILD_LOG, maxLines=9999, escapeHtml=false}"
        }
    }
        stage('Code Analysis') {
            steps {
                echo "Performing code analysis using SonarQube"
                // Code analysis with SonarQube
            }
        }
        stage('Security Scan') {
            steps {
                echo "Performing security scan using OWASP"
                // Perform security scan using OWASP
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Deploying the application to staging server (AWS EC2 instance)"
                // Deploying in AWS EC2 instance
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on the staging environment"
                // Run integration tests on the staging environment
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Deploying the application to production server (AWS EC2 instance)"
                // production deployment in AWS EC2
            }
        }
    }
    
    
}
